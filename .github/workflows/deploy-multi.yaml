name: Deploy Frontend
on:
  push:
    branches:
      - feat/dockerActions

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./multi-container
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      #Build and test the dev image
      - name: Build client dev Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/react-test -f ./client/Dockerfile.dev ./client

      - name: Run Tests on dev
        run: docker run -e CI=true ${{ secrets.DOCKER_USERNAME }}/react-test npm test

      # Build and push the prod images
      - name: Build client prod Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/client-prod:first-ctr ./client
      - name: Push client prod to Dockerhub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/client-prod:first-ctr

      - name: Build nginx prod Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-prod:first-ctr ./nginx
      - name: Push nginx prod to Dockerhub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nginx-prod:first-ctr

      - name: Build server prod Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/server-prod:first-ctr ./server
      - name: Push server prod to Dockerhub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/server-prod:first-ctr

      - name: Build worker prod Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/worker-prod:first-ctr ./worker
      - name: Push worker prod to Dockerhub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/worker-prod:first-ctr


      # - name: Generate deployment package
      #   run: zip -r deploy.zip ./ -x '*.git*'

      # Deploy the source code to EBS
      # - name: Deploy to EB
      #   uses: einaregilsson/beanstalk-deploy@v18
      #   with:
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
      #     application_name: docker-react-tf
      #     environment_name: docker-react-tf-env
      #     existing_bucket_name: elasticbeanstalk-eu-west-3-651778762109
      #     region: eu-west-3
      #     version_label: ${{ github.sha }}
      #     deployment_package: ./frontend/deploy.zip






# name: Deploy MultiDocker
# on:
#   push:
#     branches:
#       - main # check your repo, your default branch might be master!

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#       - run: docker build -t rallycoding/react-test -f ./client/Dockerfile.dev ./client
#       - run: docker run -e CI=true rallycoding/react-test npm test

#       - run: docker build -t rallycoding/multi-client ./client
#       - run: docker build -t rallycoding/multi-nginx ./nginx
#       - run: docker build -t rallycoding/multi-server ./server
#       - run: docker build -t rallycoding/multi-worker ./worker

#       - run: docker push rallycoding/multi-client
#       - run: docker push rallycoding/multi-nginx
#       - run: docker push rallycoding/multi-server
#       - run: docker push rallycoding/multi-worker

#       - name: Generate deployment package
#         run: zip -r deploy.zip . -x '*.git*'

#       # - name: Deploy to EB
#       #   uses: einaregilsson/beanstalk-deploy@v18
#       #   with:
#       #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#       #     aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#       #     application_name: multi-gh
#       #     environment_name: Multigh-env
#       #     existing_bucket_name: elasticbeanstalk-us-east-1-923445559289
#       #     region: us-east-1
#       #     version_label: ${{ github.sha }}
#       #     deployment_package: deploy.zip
